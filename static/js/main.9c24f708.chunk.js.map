{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["ContactItem","id","name","number","onDeleteContact","type","onClick","ContactList","contacts","className","map","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","resetState","this","pattern","title","required","onChange","Component","Filter","App","filter","deleteContact","contactId","prevState","contact","formSubmitHandler","find","toLocaleLowerCase","alert","addContacts","shortid","generate","preState","changeFilter","target","getFilterContacts","normalizedFilter","toLowerCase","includes","filterContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c24f708.chunk.js","sourcesContent":["import React from 'react';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li key={id}>\n      {name}:<span> {number}</span>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.scss';\nimport ContactItem from './ContactItem/ContactItem';\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            number={number}\n            name={name}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    // this.setState({\n    //   [event.currentTarget.name]: event.currentTarget.value,\n    // });\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetState();\n  };\n  resetState = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"ContactForm\">\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Telephone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport './Filter.scss';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className=\"Filter\">\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport './App.scss';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const sameName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\n    );\n    if (sameName) {\n      alert(`${name}is already in contacts.`);\n    } else {\n      const addContacts = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n      this.setState(preState => ({\n        contacts: [addContacts, ...preState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n\n    const filterContacts = this.getFilterContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}